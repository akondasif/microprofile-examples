notifications:
  email: false
git:
  quiet: true
  depth: false
language: java
python: 3
service:
- docker
env:
  global:
    secure: u6Ls1bNCxh7Lc6IzPkkoZVaso7McGjEQ+9LNc4nNCB6raDwZkGiOXMq67ECc+8WUyoVdiIpgPgyzIbMy6w589NF91IkoLTlZy9Ut7HAhZo5WkqQlO2kAD1JiXMjET2ATCwOWoNQvJkMZA7sJBexxKpMxl5vTz/y2iuHkw6KlCuivnxheak5KeSp8r5vyTPI6ZJcOP+UgqWq60HOCa99l3L4vlaMOcfQ43+QBUV3cXTmow897qddM5dBMVUvfc23792HISJ3PMoOOfNG77wkSTdzXJSfe5rouW41e9gYU//Y/CwAnFvdXvK9UBaVxAMh6Ye4+kCvlyHw8kqZO47QwOqIjQ1thTQ6sgpSpzhgk9CfHR/U8uXX9Q9+xLbg2BmSEuw2whugfux4MwrviqNFLfbzKA8lFqfuj0IUzZrOlADfMimNtXdGhlmJgR2+X73mJEdaeMRMMbqaR05oX8/x4gNv6XL1cdSyO7cLrNakVO+v0+bDya9qmF37BVtVqtTumVnS7WICISg1ZLOlEv1p4RbR6MBOK3O69B9x/cvCsa2G7d3MyVVu76dhpVb+RVDOiPQx9B4UEkPvJ1/sWcpdygU4UAv64fhL+1CoFPPRyEQpy+4KbEIJRwNS6lRwsJlhGtIP6Xpm8md4Cnzo9wC4I6K8RaYYFaZdkrGqXmP4as1s=
apt_packages:
  - python-pip
  - curl
  - jq
install: true
before_script:
  - sudo pip install --upgrade httpie >/dev/null
  - source <(curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash)
  - stop_any 80 8001 8002 8080 5432 9080 8009 8007 8005
jobs:
  include:
    #
    - stage: test
      name: smallrye-next
      jdk: openjdk8
      script:
      - cd $TRAVIS_BUILD_DIR && ./mvnw -f smallrye-next/pom.xml >/dev/null
      - cd $TRAVIS_BUILD_DIR && ./mvnw -f smallrye-next/pom.xml versions:display-property-updates
      - java -jar $TRAVIS_BUILD_DIR/smallrye-next/target/*-all.jar &
      - wait_for 8080
      - http :8080 message=hello
      - http :8080 message=world
      - http :8080 message=yeah
      - stop_any 80 8080
    #
    - stage: test
      name: smallrye-simple jdk11
      jdk: openjdk11
      script:
      - cd $TRAVIS_BUILD_DIR && ./mvnw -f smallrye-simple/pom.xml >/dev/null
      - cd $TRAVIS_BUILD_DIR && ./mvnw -f smallrye-simple/pom.xml versions:display-property-updates
      - java -jar $TRAVIS_BUILD_DIR/smallrye-simple/target/*-all.jar
    #
    - stage: test
      jdk: openjdk8
      name: kumuluzee-mp12
      script:
        - ./mvnw -U -f ./kumuluzee-mp12/pom.xml >/dev/null
        - java -jar ./kumuluzee-mp12/target/kumuluzee-mp12.jar &
        - wait_for 8080
        - http :8080
        - http :8080/data/config/lookup
        - http :8080/data/config/injected
        - http :8080/data/metrics
        - http :8080/data/resilience
        - http :8080/health
        - stop_any 80 8080
    #
    - stage: test
      jdk: openjdk8
      name: openliberty-maven-zip
      script:
        - ./mvnw -U -f openliberty-maven-zip/ package
        - ./mvnw -U -f openliberty-maven-zip/ liberty:start
        - wait_for 9080
        - http :9080/app1/
        - http :9080/app1/api/v1/ | jq
        - http :9080/app1/api/v1/props | jq
        - http :9080/app1/api/v1/properties | jq
        - ./mvnw -U -f openliberty-maven-zip/ liberty:stop liberty:clean-server
        - stop_any 80 9080
        #
        - ./mvnw -U -f openliberty-maven-zip/pom.xml clean package
        - docker build -t openliberty-maven-zip -f openliberty-maven-zip/Dockerfile openliberty-maven-zip
        - docker run -d --name app1 --rm -p 80:9080 -p 443:9443 openliberty-maven-zip
        - wait_healthy_docker_containers 1
        - sleep 15s
        - http :/app1/
        - http :/app1/api/v1/ | jq
        - http :/app1/api/v1/props | jq
        - http :/app1/api/v1/name | jq
        - http :/app1/api/v1/os | jq
        - docker rm -f -v app1
        - stop_any 80
    #
    - stage: test
      jdk: openjdk8
      name: openliberty-maven-jar
      script:
        - ./mvnw -U -f openliberty-maven-jar/pom.xml clean package
        - java -jar openliberty-maven-jar/target/*.jar &
        - wait_for 9080
        - sleep 5s
        - http :9080/
        - http :9080/api/v1/ | jq '.'
        - http :9080/api/v1/props | jq '.'
        - http :9080/api/v1/properties | jq '.'
        - stop_any 80 9080
    #
    - stage: test
      jdk: openjdk8
      name: penliberty-gradle-zip
      script:
        - ./gradlew -b openliberty-gradle-zip/build.gradle libertyStart
        - wait_for 9080
        - sleep 5s
        - http :9080/app3/
        - http :9080/app3/api/v1/ | jq '.'
        - http :9080/app3/api/v1/hello | jq '.'
        - ./gradlew -b openliberty-gradle-zip/build.gradle libertyStop
        - stop_any 80 9080
    #
    - stage: test
      jdk: openjdk8
      name: smallrye-jar
      script:
        - ./mvnw -U -f ./smallrye-jar/pom.xml clean package exec:java -Dexec.mainClass=com.github.daggerok.App
        - ./mvnw -U -f ./smallrye-jar/pom.xml clean package
        - java -jar ./smallrye-jar/target/app4-*.jar
        #
        - ./gradlew -b ./smallrye-jar/build.gradle.kts fatJar
        - java -jar ./smallrye-jar/build/libs/*-all.jar
        #
        - ./gradlew -b ./smallrye-jar/build.gradle.kts installDist
        - bash ./smallrye-jar/build/install/app4/bin/app4
    #
    - stage: test
      jdk: openjdk8
      name: wildfly-swarm-mp12
      script:
        - ./mvnw -U -f ./wildfly-swarm-mp12/pom.xml >/dev/null
        - ls -lah ./wildfly-swarm-mp12/target/ | grep jar
    #
    - stage: test
      jdk: openjdk8
      name: tomtribe-mp12
      script:
        - ./mvnw -U -f ./tomtribe-mp12/pom.xml >/dev/null
        - stop_any 80
        - docker pull openjdk:8u201-jdk-alpine3.9
        - docker run --rm -d --name app -p 8080:8080 -v $(pwd)/tomtribe-mp12/target:/tmp/app openjdk:8u201-jdk-alpine3.9 ash -c "java -jar /tmp/app/*-exec.jar"
        - docker logs -f -t app &
        - wait_for 8080
        - sleep 15s
        - http :8080/data/health
        - http :8080/data/openapi
        - http :8080/data/petrics
        - http :8080/data/config/lookup
        - http :8080/data/hello
        - http :8080/
        - docker rm -f -v app
        - stop_any 80
    #
cache:
  pip: true
  packages: true
  directories:
    - ~/.docker
    - ~/.gradle
    - ~/.m2
