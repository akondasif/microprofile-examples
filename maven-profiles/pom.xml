<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.github.daggerok.microprofile</groupId>
  <artifactId>app3</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>${packaging.type}</packaging>

  <properties>
    <java.version>1.8</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <encoding>UTF-8</encoding>
    <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>

    <packaging.type>war</packaging.type>
    <failOnMissingWebXml>false</failOnMissingWebXml>
    <packagingExcludes>pom.xml</packagingExcludes>

    <wildfly.swarm.version>2018.5.0</wildfly.swarm.version><!-- https://mvnrepository.com/artifact/org.wildfly.swarm/wildfly-swarm-plugin -->
    <thorntail.version>2.4.0.Final</thorntail.version><!-- https://mvnrepository.com/artifact/io.thorntail/thorntail-maven-plugin -->
    <openliberty.version>19.0.0.3</openliberty.version>
    <openliberty.maven.version>2.6.4</openliberty.maven.version><!-- https://mvnrepository.com/artifact/net.wasdev.wlp.maven.parent/liberty-maven-app-parent -->
    <kumuluzee.version>3.2.0</kumuluzee.version><!-- https://mvnrepository.com/artifact/com.kumuluz.ee/kumuluzee-maven-plugin -->
    <payara.version>5.191</payara.version>
    <tomee.version>8.0.0-M2</tomee.version>
    <helidon.version>1.0.2</helidon.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <version>8.0</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.6</version>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>io.vavr</groupId>
      <artifactId>vavr</artifactId>
      <version>0.9.2</version>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>package</defaultGoal>
  </build>

  <profiles>
    <profile>
      <id>wildfly-swarm</id>

      <properties>
        <wildfly.swarm.version>2018.5.0</wildfly.swarm.version>
      </properties>

      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>bom-all</artifactId>
            <version>${wildfly.swarm.version}</version>
            <scope>import</scope>
            <type>pom</type>
          </dependency>
        </dependencies>
      </dependencyManagement>

      <dependencies>
        <!--<dependency>
          <groupId>org.wildfly.swarm</groupId>
          <artifactId>microprofile</artifactId>
        </dependency>-->
        <dependency>
          <groupId>org.wildfly.swarm</groupId>
          <artifactId>cdi</artifactId>
        </dependency>
        <dependency>
          <groupId>org.wildfly.swarm</groupId>
          <artifactId>ejb</artifactId>
        </dependency>
        <dependency>
          <groupId>org.wildfly.swarm</groupId>
          <artifactId>jaxrs-jsonp</artifactId>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>wildfly-swarm-plugin</artifactId>
            <version>${wildfly.swarm.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>package</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>thorntail</id>

      <properties>
        <thorntail.version>2.4.0.Final</thorntail.version>
      </properties>

      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>io.thorntail</groupId>
            <artifactId>bom-all</artifactId>
            <version>${thorntail.version}</version>
            <scope>import</scope>
            <type>pom</type>
          </dependency>
        </dependencies>
      </dependencyManagement>

      <dependencies>
        <dependency>
          <groupId>io.thorntail</groupId>
          <artifactId>microprofile</artifactId>
        </dependency>
        <!--<dependency>
          <groupId>io.thorntail</groupId>
          <artifactId>cdi</artifactId>
        </dependency>
        <dependency>
          <groupId>io.thorntail</groupId>
          <artifactId>ejb</artifactId>
        </dependency>
        <dependency>
          <groupId>io.thorntail</groupId>
          <artifactId>jaxrs-jsonp</artifactId>
        </dependency>-->
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>io.thorntail</groupId>
            <artifactId>thorntail-maven-plugin</artifactId>
            <version>${thorntail.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>package</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>open-liberty</id>

      <properties>
        <openliberty.maven.version>2.2</openliberty.maven.version>
        <openliberty.version>19.0.0.3</openliberty.version>
        <httpPort>8181</httpPort>
        <httpsPort>8543</httpsPort>
        <jwt.issuer>https://server.example.com</jwt.issuer>
        <packaging.type>war</packaging.type>
      </properties>

      <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
          <resource>
            <directory>${basedir}/src/main/resources</directory>
            <includes>
              <include>**/*.*</include>
            </includes>
          </resource>
          <resource>
            <directory>${basedir}/src/main/liberty</directory>
            <filtering>true</filtering>
            <includes>
              <include>**/*.*</include>
            </includes>
          </resource>
        </resources>

        <plugins>
          <plugin>
            <groupId>net.wasdev.wlp.maven.plugins</groupId>
            <artifactId>liberty-maven-plugin</artifactId>
            <version>${openliberty.maven.version}</version>
            <configuration>
              <assemblyArtifact>
                <groupId>io.openliberty</groupId>
                <artifactId>openliberty-runtime</artifactId>
                <version>${openliberty.version}</version>
                <type>zip</type>
              </assemblyArtifact>
              <configFile>target/classes/config/server.xml</configFile>
              <appArchive>${project.build.directory}/${project.artifactId}.war</appArchive>
              <packageFile>${project.build.directory}/${project.artifactId}.jar</packageFile>
              <include>runnable</include>
              <serverName>${project.artifactId}</serverName>
              <installAppPackages>project</installAppPackages>
              <configDirectory>${project.basedir}/src/main/liberty/server</configDirectory>
            </configuration>
            <executions>
              <execution>
                <id>package-server</id>
                <phase>package</phase>
                <goals>
                  <goal>create-server</goal>
                  <goal>install-apps</goal>
                  <goal>package-server</goal>
                </goals>
                <configuration>
                  <outputDirectory>target/wlp-package</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>kumuluzee</id>

      <properties>
        <packaging.type>jar</packaging.type>
        <kumuluzee.version>3.2.0</kumuluzee.version>
        <kumuluzee-config-mp.version>1.3.0</kumuluzee-config-mp.version>
      </properties>

      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>com.kumuluz.ee</groupId>
            <artifactId>kumuluzee-bom</artifactId>
            <version>${kumuluzee.version}</version>
            <type>pom</type>
            <scope>import</scope>
          </dependency>
        </dependencies>
      </dependencyManagement>

      <dependencies>
        <dependency>
          <groupId>com.kumuluz.ee</groupId>
          <artifactId>kumuluzee-microProfile-2.1</artifactId>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>com.kumuluz.ee</groupId>
            <artifactId>kumuluzee-maven-plugin</artifactId>
            <version>${kumuluzee.version}</version>
            <executions>
              <execution>
                <id>package</id>
                <goals>
                  <goal>repackage</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>payara-micro</id>

      <properties>
        <payara.version>5.191</payara.version>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>fish.payara.maven.plugins</groupId>
            <artifactId>payara-micro-maven-plugin</artifactId>
            <version>1.0.4</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>bundle</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <payaraVersion>${payara.version}</payaraVersion>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>tomee</id>

      <properties>
        <tomee.version>8.0.0-M2</tomee.version>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.tomee.maven</groupId>
            <artifactId>tomee-maven-plugin</artifactId>
            <version>${tomee.version}</version>
            <configuration>
              <context>ROOT</context>
              <classifier>microprofile</classifier>
              <tomeeClassifier>microprofile</tomeeClassifier>
              <!--<systemVariables>
                <mp.jwt.verify.publickey.location>/publicKey.pem</mp.jwt.verify.publickey.location>
              </systemVariables>-->
            </configuration>
            <executions>
              <execution>
                <id>executable-jar</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>helidon</id>

      <properties>
        <helidon.version>1.0.2</helidon.version>
        <jersey.version>2.28</jersey.version>
        <mainClass>io.helidon.microprofile.server.Main</mainClass>
        <libs.classpath.prefix>libs</libs.classpath.prefix>
        <copied.libs.dir>${project.build.directory}/${libs.classpath.prefix}</copied.libs.dir>
      </properties>

      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>io.helidon</groupId>
            <artifactId>helidon-bom</artifactId>
            <version>${helidon.version}</version>
            <type>pom</type>
            <scope>import</scope>
          </dependency>
          <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jandex</artifactId>
            <version>2.1.1.Final</version>
          </dependency>
          <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>javax.activation-api</artifactId>
            <version>1.2.0</version>
          </dependency>
          <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-binding</artifactId>
            <version>${jersey.version}</version>
          </dependency>
          <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
          </dependency>
        </dependencies>
      </dependencyManagement>

      <dependencies>
        <dependency>
          <groupId>io.helidon.microprofile.bundles</groupId>
          <artifactId>helidon-microprofile-1.2</artifactId>
        </dependency>
        <dependency>
          <groupId>org.glassfish.jersey.media</groupId>
          <artifactId>jersey-media-json-binding</artifactId>
        </dependency>
        <dependency>
          <groupId>org.glassfish.jersey.core</groupId>
          <artifactId>jersey-client</artifactId>
          <scope>compile</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss</groupId>
          <artifactId>jandex</artifactId>
          <scope>runtime</scope>
          <optional>true</optional>
        </dependency>
        <dependency>
          <groupId>javax.activation</groupId>
          <artifactId>javax.activation-api</artifactId>
          <scope>runtime</scope>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <!-- so that we can have some static web content -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>copy-resources</id>
                <phase>validate</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${basedir}/src/main/resources/WEB</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/main/webapp</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>3.1.1</version>
            <configuration>
              <archive>
                <manifest>
                  <addClasspath>true</addClasspath>
                  <classpathPrefix>${libs.classpath.prefix}</classpathPrefix>
                  <mainClass>${mainClass}</mainClass>
                </manifest>
              </archive>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>3.1.1</version>
            <executions>
              <execution>
                <id>copy-dependencies</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <outputDirectory>${copied.libs.dir}</outputDirectory>
                  <overWriteReleases>false</overWriteReleases>
                  <overWriteSnapshots>false</overWriteSnapshots>
                  <overWriteIfNewer>true</overWriteIfNewer>
                  <overWriteIfNewer>true</overWriteIfNewer>
                  <includeScope>runtime</includeScope>
                  <excludeScope>test</excludeScope>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
